<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Push on leehack&#39;s blog</title>
    <link>https://blog.leehack.com/categories/push/</link>
    <description>Recent content in Push on leehack&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Dec 2011 04:56:00 +0000</lastBuildDate>
    <atom:link href="https://blog.leehack.com/categories/push/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Android C2DM client 예제</title>
      <link>https://blog.leehack.com/blog/2011/12/09/android-c2dm-client-%EC%98%88%EC%A0%9C/</link>
      <pubDate>Fri, 09 Dec 2011 04:56:00 +0000</pubDate>
      
      <guid>https://blog.leehack.com/blog/2011/12/09/android-c2dm-client-%EC%98%88%EC%A0%9C/</guid>
      <description>&lt;p&gt;준비물 : c2dm account(&lt;a href=&#34;(/blog/2011/12/09/python으로-c2dm-server-만들기)&#34;&gt;파이썬으로 c2dm서버 만들기&lt;/a&gt; 포스팅 참조)&lt;/p&gt;

&lt;p&gt;만들 예제의 패키지 구조.&lt;br /&gt;
&lt;img src=&#34;http://4.bp.blogspot.com/-f9hw88JM4MU/TuHeizYCzYI/AAAAAAAADnE/_8JG2D4Tc50/s320/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-09+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+7.10.00.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;우선 Manifest file의 Code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;manifest android:versioncode=&amp;quot;1&amp;quot; android:versionname=&amp;quot;1.0&amp;quot; package=&amp;quot;com.leehack.c2dmtest&amp;quot; xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&amp;gt;
    &amp;lt;uses-sdk android:minsdkversion=&amp;quot;14&amp;quot;&amp;gt;
        &amp;lt;application android:icon=&amp;quot;@drawable/ic_launcher&amp;quot; android:label=&amp;quot;@string/app_name&amp;quot;&amp;gt;
            &amp;lt;activity android:label=&amp;quot;@string/app_name&amp;quot; android:name=&amp;quot;.C2DM_TESTActivity&amp;quot;&amp;gt;
                &amp;lt;intent-filter&amp;gt;
                    &amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot;&amp;gt;
                        &amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot;&amp;gt;&amp;lt;/category&amp;gt;
                    &amp;lt;/action&amp;gt;
                &amp;lt;/intent-filter&amp;gt;
            &amp;lt;/activity&amp;gt;
            
            &amp;lt;!-- Only C2DM servers can send messages for the app. If permission is not set - any other app can generate it --&amp;gt;
            &amp;lt;receiver android:name=&amp;quot;.push.C2DMReceiver&amp;quot; android:permission=&amp;quot;com.google.android.c2dm.permission.SEND&amp;quot;&amp;gt;
                &amp;lt;!-- Receive the actual message --&amp;gt;
                &amp;lt;intent-filter&amp;gt;
                    &amp;lt;action android:name=&amp;quot;com.google.android.c2dm.intent.RECEIVE&amp;quot;&amp;gt;
                        &amp;lt;category android:name=&amp;quot;com.leehack.c2dmtest&amp;quot;&amp;gt;&amp;lt;/category&amp;gt;
                    &amp;lt;/action&amp;gt;
                &amp;lt;/intent-filter&amp;gt;
                &amp;lt;!-- Receive the registration id --&amp;gt;
                &amp;lt;intent-filter&amp;gt;
                    &amp;lt;action android:name=&amp;quot;com.google.android.c2dm.intent.REGISTRATION&amp;quot;&amp;gt;
                        &amp;lt;category android:name=&amp;quot;com.leehack.c2dmtest&amp;quot;&amp;gt;
                        &amp;lt;/category&amp;gt;
                    &amp;lt;/action&amp;gt;
                &amp;lt;/intent-filter&amp;gt;
            &amp;lt;/receiver&amp;gt;
        &amp;lt;/application&amp;gt;
        &amp;lt;!-- Only this application can receive the messages and registration result --&amp;gt;
        &amp;lt;permission android:name=&amp;quot;com.leehack.c2dmtest.permission.C2D_MESSAGE&amp;quot; android:protectionlevel=&amp;quot;signature&amp;quot;&amp;gt;
            &amp;lt;uses-permission android:name=&amp;quot;com.leehack.c2dmtest.permission.C2D_MESSAGE&amp;quot;&amp;gt;&amp;lt;/uses-permission&amp;gt;
            &amp;lt;!-- This app has permission to register and receive message --&amp;gt;
            &amp;lt;uses-permission android:name=&amp;quot;com.google.android.c2dm.permission.RECEIVE&amp;quot;&amp;gt;&amp;lt;/uses-permission&amp;gt;
        &amp;lt;/permission&amp;gt;
    &amp;lt;/uses-sdk&amp;gt;
&amp;lt;/manifest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C2DMReceiver.java: 리시버 작성.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.leehack.c2dmtest.push;
import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.util.Log;
import android.view.Gravity;
import android.widget.Toast;
public class C2DMReceiver extends BroadcastReceiver
{
    static String registration_id = null;
    private Context mContext;
    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals(&amp;quot;com.google.android.c2dm.intent.REGISTRATION&amp;quot;)) {
            handleRegistration(context, intent);
        } else if (intent.getAction().equals(&amp;quot;com.google.android.c2dm.intent.RECEIVE&amp;quot;)) {
        	//서버에 등록이 되면 Registration_id를 C2DM서버에서 보내준다. 받은 이 ID를 별도로 구성한 서버에 보내야 한다.
            handleMessage(context, intent);
        }
    }
    private void handleRegistration(Context context, Intent intent) {
        String registration = intent.getStringExtra(&amp;quot;registration_id&amp;quot;);
        if (intent.getStringExtra(&amp;quot;error&amp;quot;) != null) {
        	// Registration failed, should try again later.
        } else if (intent.getStringExtra(&amp;quot;unregistered&amp;quot;) != null) {
            registration = null;
        } else if (registration != null) {
            registration_id = registration;
            mContext = context;
            SharedPreferences sp  = mContext.getSharedPreferences(&amp;quot;com.leehack.c2dmtest&amp;quot;, Activity.MODE_PRIVATE);
            SharedPreferences.Editor ed = sp.edit();
            ed.putString(&amp;quot;registration_id&amp;quot;, registration_id);
            ed.commit();
            Toast toast = Toast.makeText(context, &amp;quot;Registration Id\n&amp;quot; + registration_id, Toast.LENGTH_LONG);
            toast.setGravity(Gravity.TOP | Gravity.CENTER, 0, 150);
            toast.show();
            Log.d(&amp;quot;C2DMReceiver&amp;quot;, &amp;quot;c2dm registered&amp;quot;);
        }
    }
    //메세지가 도착하면 토스트로 도착한 메세지를 보여줌
    private void handleMessage(Context context, Intent intent) {
        String c2dm_msg = intent.getExtras().getString(&amp;quot;msg&amp;quot;);
        System.out.println(&amp;quot;c2dm_msg======&amp;gt;&amp;quot; + c2dm_msg);
        Toast toast = Toast.makeText(context, &amp;quot;c2dmMessage\n&amp;quot; + c2dm_msg, Toast.LENGTH_LONG);
        toast.setGravity(Gravity.TOP | Gravity.CENTER, 0, 150);
        toast.show();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PushHelper.java: c2dm 서버에 Register/Unregister 메소드 작성.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.leehack.c2dmtest.push;
import android.app.Activity;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
public class PushHelper {
	final static String c2dmDevId = &amp;quot;c2dm에 등록한 account&amp;quot;;
	public static void c2dmRegister(Context context){
		SharedPreferences sp  = context.getSharedPreferences(&amp;quot;com.leehack.c2dmtest&amp;quot;, Activity.MODE_PRIVATE);
		if(sp.getString(&amp;quot;registration_id&amp;quot;, null) != null)
			return;
		Intent registrationIntent = new Intent(
			&amp;quot;com.google.android.c2dm.intent.REGISTER&amp;quot;);
		registrationIntent.putExtra(&amp;quot;app&amp;quot;,
			PendingIntent.getBroadcast(context, 0, new Intent(), 0));
		registrationIntent.putExtra(&amp;quot;sender&amp;quot;, c2dmDevId);
		context.startService(registrationIntent);
	}
	public static void c2dmUnregister(Context context){
		Intent unregIntent = new Intent(&amp;quot;com.google.android.c2dm.intent.UNREGISTER&amp;quot;);
		unregIntent.putExtra(&amp;quot;app&amp;quot;, PendingIntent.getBroadcast(context, 0, new Intent(), 0));
		context.startService(unregIntent);
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C2DM_TESTActivity.java: Register와 Unregister버튼의 동작을 정의&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.leehack.c2dmtest;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import com.leehack.c2dmtest.push.PushHelper;

public class C2DM_TESTActivity extends Activity {
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		findViewById(R.id.button1).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
			// TODO Auto-generated method stub
			PushHelper.c2dmRegister(C2DM_TESTActivity.this);
			}
		});
		findViewById(R.id.button2).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				PushHelper.c2dmUnregister(C2DM_TESTActivity.this);
			}
		});
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;앞으로 해야 할일!.&lt;br /&gt;
1. 구글의 C2DM과 통신한 Push Server 구성.&lt;br /&gt;
2. Register를 한 후 C2DMReceiver를 통해 C2DM 서버로 부터 전달받은 Registration_ID를 구성한 Push Server로 전달하는 로직 구성.&lt;br /&gt;
    (&lt;a href=&#34;(/blog/2011/12/09/python으로-c2dm-server-만들기)&#34;&gt;파이썬으로 c2dm서버 만들기&lt;/a&gt; 포스팅을 참조하면 1번은 해결될 것이고 2번만 추가로 구성하면 된다)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python으로 c2dm server 만들기</title>
      <link>https://blog.leehack.com/blog/2011/12/09/python%EC%9C%BC%EB%A1%9C-c2dm-server-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Fri, 09 Dec 2011 04:25:00 +0000</pubDate>
      
      <guid>https://blog.leehack.com/blog/2011/12/09/python%EC%9C%BC%EB%A1%9C-c2dm-server-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>&lt;p&gt;1.&amp;nbsp;&lt;a href=&#34;http://code.google.com/intl/ko-KR/android/c2dm/&#34;&gt;http://code.google.com/intl/ko-KR/android/c2dm/&lt;/a&gt; 에서 c2dm 서비스에 sign-up&lt;br /&gt;(gmail account를 새로 만들어서 가입하는 것이 좋다. - 실제로 이 account정보를 클라이언트 및 서버에 모두 넣어야 하고 더구나 서버에는 패스워드정보도 필요하기 때문)&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-HdKsVNq8U3Y/TuHWLJiuniI/AAAAAAAADm8/cOUAaTiV7_o/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-09+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+6.33.53.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;336&#34; src=&#34;http://4.bp.blogspot.com/-HdKsVNq8U3Y/TuHWLJiuniI/AAAAAAAADm8/cOUAaTiV7_o/s640/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-09+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+6.33.53.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;2. 가입하면 E-mail로 가입한 Account로 서비스가 Enable되었다는 내용의 메일이 옮(보통 하루안에 오고 늦어도 몇일 사이에는 오는 듯)&lt;br /&gt;&lt;br /&gt;여기까지 준비 완료! 아래는 실제 파이썬 코드 시작!!&lt;br /&gt;&lt;br /&gt;&lt;pre class=&#34;brush:python&#34;&gt;import urllib, urllib2&lt;br /&gt;&lt;br /&gt;class ClientLoginTokenFactory(): &lt;br /&gt;    _token = None &lt;br /&gt;    &lt;br /&gt;    def &lt;strong&gt;init&lt;/strong&gt;(self):&lt;br /&gt;        self.url = &amp;lsquo;&lt;a href=&#34;https://www.google.com/accounts/ClientLogin&#39;&#34;&gt;https://www.google.com/accounts/ClientLogin&#39;&lt;/a&gt;&lt;br /&gt;        self.accountType = &amp;lsquo;GOOGLE&amp;rsquo;&lt;br /&gt;        self.email = &amp;lsquo;c2dm에 가입한 메일주소&amp;rsquo;&lt;br /&gt;        self.password = &amp;lsquo;c2dm에 가입한 메일주소의 패스워드&amp;rsquo;&lt;br /&gt;        self.source = &amp;lsquo;replstory-replstory-0&amp;rsquo;&lt;br /&gt;        self.service = &amp;lsquo;ac2dm&amp;rsquo;&lt;br /&gt;    &lt;br /&gt;    def getToken(self):    &lt;br /&gt;        if self._token is None:&lt;br /&gt;            &lt;br /&gt;            # Build payload&lt;br /&gt;            values = {&amp;lsquo;accountType&amp;rsquo; : self.accountType,&lt;br /&gt;                      &amp;lsquo;Email&amp;rsquo; : self.email,&lt;br /&gt;                      &amp;lsquo;Passwd&amp;rsquo; : self.password, &lt;br /&gt;                      &amp;lsquo;source&amp;rsquo; : self.source, &lt;br /&gt;                      &amp;lsquo;service&amp;rsquo; : self.service}&lt;br /&gt;            &lt;br /&gt;            # Build request&lt;br /&gt;            data = urllib.urlencode(values)&lt;br /&gt;            request = urllib2.Request(self.url, data)&lt;br /&gt;            &lt;br /&gt;            # Post&lt;br /&gt;            response = urllib2.urlopen(request)&lt;br /&gt;            responseAsString = response.read()&lt;br /&gt;            &lt;br /&gt;            # Format response&lt;br /&gt;            responseAsList = responseAsString.split(&amp;rsquo;\n&amp;rsquo;)&lt;br /&gt;            &lt;br /&gt;            self._token = responseAsList[2].split(&amp;lsquo;=&amp;rsquo;)[1]&lt;br /&gt;            &lt;br /&gt;        return self._token&lt;br /&gt;    &lt;br /&gt;class C2DM():&lt;br /&gt;    &lt;br /&gt;    def &lt;strong&gt;init&lt;/strong&gt;(self):&lt;br /&gt;        self.url = &amp;lsquo;&lt;a href=&#34;https://android.apis.google.com/c2dm/send&#39;&#34;&gt;https://android.apis.google.com/c2dm/send&#39;&lt;/a&gt;&lt;br /&gt;        self.clientAuth = None&lt;br /&gt;        self.registrationId = None&lt;br /&gt;        self.collapseKey = None&lt;br /&gt;        self.data = {}&lt;br /&gt;        &lt;br /&gt;    def sendMessage(self):&lt;br /&gt;        if self.registrationId == None or self.collapseKey == None:&lt;br /&gt;            return False&lt;br /&gt;        &lt;br /&gt;        clientAuthFactory = ClientLoginTokenFactory()&lt;br /&gt;        self.clientAuth = clientAuthFactory.getToken()&lt;br /&gt;        &lt;br /&gt;        # Build payload&lt;br /&gt;        values = {&amp;lsquo;registration_id&amp;rsquo; : self.registrationId,&lt;br /&gt;                  &amp;lsquo;collapse_key&amp;rsquo; : self.collapseKey}     &lt;br /&gt;        &lt;br /&gt;        # Loop over any data we want to send&lt;br /&gt;        for k, v in self.data.iteritems():            &lt;br /&gt;            values[&amp;lsquo;data.&amp;rsquo; + k] = v&lt;br /&gt;        &lt;br /&gt;        # Build request&lt;br /&gt;        headers = {&amp;lsquo;Authorization&amp;rsquo;: &amp;lsquo;GoogleLogin auth=&amp;rsquo; + self.clientAuth}        &lt;br /&gt;        data = urllib.urlencode(values)&lt;br /&gt;        request = urllib2.Request(self.url, data, headers)&lt;br /&gt;        &lt;br /&gt;        # Post&lt;br /&gt;        try:&lt;br /&gt;            response = urllib2.urlopen(request)&lt;br /&gt;            responseAsString = response.read()&lt;br /&gt;            &lt;br /&gt;            return responseAsString&lt;br /&gt;        except urllib2.HTTPError, e:&lt;br /&gt;            print &amp;lsquo;HTTPError &amp;rsquo; + str(e)&lt;br /&gt;            &lt;br /&gt;            &lt;br /&gt;sender = C2DM()&lt;br /&gt;sender.registrationId = &amp;lsquo;Android단말기에서 c2dm서버로 부터 받은 고유번호&amp;rsquo;&lt;br /&gt;sender.collapseKey = 1&lt;br /&gt;sender.data = {&amp;lsquo;msg&amp;rsquo;:&amp;lsquo;test&amp;rsquo;}&lt;br /&gt;response = sender.sendMessage()&lt;br /&gt;print response&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;9,10,79 라인의 정보만 바꾸고 실행하면 c2dm등록된 단말기로 test라는 푸시 메세지가 날아간다.&lt;br /&gt;&lt;a href=&#34;http://blog.boxedice.com/2010/10/07/android-push-notifications-tutorial/&#34;&gt;http://blog.boxedice.com/2010/10/07/android-push-notifications-tutorial/&lt;/a&gt;&amp;nbsp;에 있는 예제코드인데 제대로 돌지 않아서 약간의 수정만 했음.&lt;br /&gt;&lt;br /&gt;이미 눈치 채셨겠지만 실제 사용시에는 78라인부터만 따로 가져가서 원하는 곳에 사용하면 된다. collapseKey를 1로 고정해두고 사용하면 c2dm메세지가 동일한 단말에 동일한 메세지를 계속 적으로 보낼 경우 중간중간 빼먹는 경우가 생긴다. 구글에서 중복된 메세지 전송을 방지하게 넣어둔 코드임. 중복으로 보내는 메세지라도 단말에 꼭 전송이 되어야 하는 메세지라면 collapseKey를 increase하면서 보내는 것이 상책!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>