<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on leehack&#39;s blog</title>
    <link>http://blog.leehack.com/tags/python/</link>
    <description>Recent content in Python on leehack&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Dec 2011 04:25:00 +0000</lastBuildDate>
    <atom:link href="http://blog.leehack.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Python으로 c2dm server 만들기</title>
      <link>http://blog.leehack.com/blog/2011/12/09/python%EC%9C%BC%EB%A1%9C-c2dm-server-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Fri, 09 Dec 2011 04:25:00 +0000</pubDate>
      
      <guid>http://blog.leehack.com/blog/2011/12/09/python%EC%9C%BC%EB%A1%9C-c2dm-server-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>&lt;p&gt;1.&amp;nbsp;&lt;a href=&#34;http://code.google.com/intl/ko-KR/android/c2dm/&#34;&gt;http://code.google.com/intl/ko-KR/android/c2dm/&lt;/a&gt; 에서 c2dm 서비스에 sign-up&lt;br /&gt;(gmail account를 새로 만들어서 가입하는 것이 좋다. - 실제로 이 account정보를 클라이언트 및 서버에 모두 넣어야 하고 더구나 서버에는 패스워드정보도 필요하기 때문)&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-HdKsVNq8U3Y/TuHWLJiuniI/AAAAAAAADm8/cOUAaTiV7_o/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-09+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+6.33.53.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;336&#34; src=&#34;http://4.bp.blogspot.com/-HdKsVNq8U3Y/TuHWLJiuniI/AAAAAAAADm8/cOUAaTiV7_o/s640/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-09+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+6.33.53.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;2. 가입하면 E-mail로 가입한 Account로 서비스가 Enable되었다는 내용의 메일이 옮(보통 하루안에 오고 늦어도 몇일 사이에는 오는 듯)&lt;br /&gt;&lt;br /&gt;여기까지 준비 완료! 아래는 실제 파이썬 코드 시작!!&lt;br /&gt;&lt;br /&gt;&lt;pre class=&#34;brush:python&#34;&gt;import urllib, urllib2&lt;br /&gt;&lt;br /&gt;class ClientLoginTokenFactory(): &lt;br /&gt;    _token = None &lt;br /&gt;    &lt;br /&gt;    def &lt;strong&gt;init&lt;/strong&gt;(self):&lt;br /&gt;        self.url = &amp;lsquo;&lt;a href=&#34;https://www.google.com/accounts/ClientLogin&#39;&#34;&gt;https://www.google.com/accounts/ClientLogin&#39;&lt;/a&gt;&lt;br /&gt;        self.accountType = &amp;lsquo;GOOGLE&amp;rsquo;&lt;br /&gt;        self.email = &amp;lsquo;c2dm에 가입한 메일주소&amp;rsquo;&lt;br /&gt;        self.password = &amp;lsquo;c2dm에 가입한 메일주소의 패스워드&amp;rsquo;&lt;br /&gt;        self.source = &amp;lsquo;replstory-replstory-0&amp;rsquo;&lt;br /&gt;        self.service = &amp;lsquo;ac2dm&amp;rsquo;&lt;br /&gt;    &lt;br /&gt;    def getToken(self):    &lt;br /&gt;        if self._token is None:&lt;br /&gt;            &lt;br /&gt;            # Build payload&lt;br /&gt;            values = {&amp;lsquo;accountType&amp;rsquo; : self.accountType,&lt;br /&gt;                      &amp;lsquo;Email&amp;rsquo; : self.email,&lt;br /&gt;                      &amp;lsquo;Passwd&amp;rsquo; : self.password, &lt;br /&gt;                      &amp;lsquo;source&amp;rsquo; : self.source, &lt;br /&gt;                      &amp;lsquo;service&amp;rsquo; : self.service}&lt;br /&gt;            &lt;br /&gt;            # Build request&lt;br /&gt;            data = urllib.urlencode(values)&lt;br /&gt;            request = urllib2.Request(self.url, data)&lt;br /&gt;            &lt;br /&gt;            # Post&lt;br /&gt;            response = urllib2.urlopen(request)&lt;br /&gt;            responseAsString = response.read()&lt;br /&gt;            &lt;br /&gt;            # Format response&lt;br /&gt;            responseAsList = responseAsString.split(&amp;rsquo;\n&amp;rsquo;)&lt;br /&gt;            &lt;br /&gt;            self._token = responseAsList[2].split(&amp;lsquo;=&amp;rsquo;)[1]&lt;br /&gt;            &lt;br /&gt;        return self._token&lt;br /&gt;    &lt;br /&gt;class C2DM():&lt;br /&gt;    &lt;br /&gt;    def &lt;strong&gt;init&lt;/strong&gt;(self):&lt;br /&gt;        self.url = &amp;lsquo;&lt;a href=&#34;https://android.apis.google.com/c2dm/send&#39;&#34;&gt;https://android.apis.google.com/c2dm/send&#39;&lt;/a&gt;&lt;br /&gt;        self.clientAuth = None&lt;br /&gt;        self.registrationId = None&lt;br /&gt;        self.collapseKey = None&lt;br /&gt;        self.data = {}&lt;br /&gt;        &lt;br /&gt;    def sendMessage(self):&lt;br /&gt;        if self.registrationId == None or self.collapseKey == None:&lt;br /&gt;            return False&lt;br /&gt;        &lt;br /&gt;        clientAuthFactory = ClientLoginTokenFactory()&lt;br /&gt;        self.clientAuth = clientAuthFactory.getToken()&lt;br /&gt;        &lt;br /&gt;        # Build payload&lt;br /&gt;        values = {&amp;lsquo;registration_id&amp;rsquo; : self.registrationId,&lt;br /&gt;                  &amp;lsquo;collapse_key&amp;rsquo; : self.collapseKey}     &lt;br /&gt;        &lt;br /&gt;        # Loop over any data we want to send&lt;br /&gt;        for k, v in self.data.iteritems():            &lt;br /&gt;            values[&amp;lsquo;data.&amp;rsquo; + k] = v&lt;br /&gt;        &lt;br /&gt;        # Build request&lt;br /&gt;        headers = {&amp;lsquo;Authorization&amp;rsquo;: &amp;lsquo;GoogleLogin auth=&amp;rsquo; + self.clientAuth}        &lt;br /&gt;        data = urllib.urlencode(values)&lt;br /&gt;        request = urllib2.Request(self.url, data, headers)&lt;br /&gt;        &lt;br /&gt;        # Post&lt;br /&gt;        try:&lt;br /&gt;            response = urllib2.urlopen(request)&lt;br /&gt;            responseAsString = response.read()&lt;br /&gt;            &lt;br /&gt;            return responseAsString&lt;br /&gt;        except urllib2.HTTPError, e:&lt;br /&gt;            print &amp;lsquo;HTTPError &amp;rsquo; + str(e)&lt;br /&gt;            &lt;br /&gt;            &lt;br /&gt;sender = C2DM()&lt;br /&gt;sender.registrationId = &amp;lsquo;Android단말기에서 c2dm서버로 부터 받은 고유번호&amp;rsquo;&lt;br /&gt;sender.collapseKey = 1&lt;br /&gt;sender.data = {&amp;lsquo;msg&amp;rsquo;:&amp;lsquo;test&amp;rsquo;}&lt;br /&gt;response = sender.sendMessage()&lt;br /&gt;print response&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;9,10,79 라인의 정보만 바꾸고 실행하면 c2dm등록된 단말기로 test라는 푸시 메세지가 날아간다.&lt;br /&gt;&lt;a href=&#34;http://blog.boxedice.com/2010/10/07/android-push-notifications-tutorial/&#34;&gt;http://blog.boxedice.com/2010/10/07/android-push-notifications-tutorial/&lt;/a&gt;&amp;nbsp;에 있는 예제코드인데 제대로 돌지 않아서 약간의 수정만 했음.&lt;br /&gt;&lt;br /&gt;이미 눈치 채셨겠지만 실제 사용시에는 78라인부터만 따로 가져가서 원하는 곳에 사용하면 된다. collapseKey를 1로 고정해두고 사용하면 c2dm메세지가 동일한 단말에 동일한 메세지를 계속 적으로 보낼 경우 중간중간 빼먹는 경우가 생긴다. 구글에서 중복된 메세지 전송을 방지하게 넣어둔 코드임. 중복으로 보내는 메세지라도 단말에 꼭 전송이 되어야 하는 메세지라면 collapseKey를 increase하면서 보내는 것이 상책!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pydev에서 Library 인식 안될 때</title>
      <link>http://blog.leehack.com/blog/2011/12/08/pydev%EC%97%90%EC%84%9C-library-%EC%9D%B8%EC%8B%9D-%EC%95%88%EB%90%A0-%EB%95%8C/</link>
      <pubDate>Thu, 08 Dec 2011 00:11:00 +0000</pubDate>
      
      <guid>http://blog.leehack.com/blog/2011/12/08/pydev%EC%97%90%EC%84%9C-library-%EC%9D%B8%EC%8B%9D-%EC%95%88%EB%90%A0-%EB%95%8C/</guid>
      <description>&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;여러가지 파이썬용 웹프레임웍을 이클립스의 Pydev에서 돌려보는 중 아주 눈에 거슬리는 것을 발견!!&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-Kjw6eJWF2jg/TuBHAnvNgFI/AAAAAAAADmc/tOcbO50iSPs/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.11.16.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;116&#34; src=&#34;http://4.bp.blogspot.com/-Kjw6eJWF2jg/TuBHAnvNgFI/AAAAAAAADmc/tOcbO50iSPs/s320/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.11.16.png&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&#34;text-align: center;&#34;&gt;빌드도 잘되고 Run도 잘되는데 저 빨간줄! 엑스표! 에디터상에 나타나는거 아주 짜증스럽다!&lt;/div&gt;&lt;div style=&#34;text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&#34;text-align: center;&#34;&gt;오늘은 맘먹고 고치겠다고 선언! 아무리 웹을 뒤져도 나오지 않는다! 왜일까... 결국엔 삽질 끝에 아주 간단히 해결.. eclipse-&amp;gt;preference-&amp;gt;interpreter -Python&lt;/div&gt;&lt;div style=&#34;text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-pguZkmifMq8/TuBHslyT4yI/AAAAAAAADmk/PqCAHRBjujY/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.14.11.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;404&#34; src=&#34;http://1.bp.blogspot.com/-pguZkmifMq8/TuBHslyT4yI/AAAAAAAADmk/PqCAHRBjujY/s640/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.14.11.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&#34;text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&#34;text-align: center;&#34;&gt;위 화면에서 Auto Config click하면 이런화면이 나온다.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-iyg6LNy26oE/TuBIDHHPyvI/AAAAAAAADms/QIXg-WeflHA/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.15.32.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;608&#34; src=&#34;http://1.bp.blogspot.com/-iyg6LNy26oE/TuBIDHHPyvI/AAAAAAAADms/QIXg-WeflHA/s640/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.15.32.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;보통은 위에 선택되어 있는 것처럼 해놓고 사용했었는데.. (easy_install하면 젤 아래 /Library/Python/2.7/site-packages 에 들어가기 때문에..)&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;알고보니 library로 인식이 안되고 있는 것이였다 -_-;;(이런 멍청한! 모르면 죽어야지!)&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;Select All한 후 코드를 다시 열어보니.. 깔끔하게 보인다.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-D5DtWl3LbRo/TuBIrSwbwvI/AAAAAAAADm0/MNG13KWe_qI/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.18.21.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-D5DtWl3LbRo/TuBIrSwbwvI/AAAAAAAADm0/MNG13KWe_qI/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.18.21.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;짠!&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;끝!!!&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python:: flask, webpy, Django, Bottle, web2py ...</title>
      <link>http://blog.leehack.com/blog/2011/12/07/python-flask-webpy-django-bottle-web2py-.../</link>
      <pubDate>Wed, 07 Dec 2011 22:18:00 +0000</pubDate>
      
      <guid>http://blog.leehack.com/blog/2011/12/07/python-flask-webpy-django-bottle-web2py-.../</guid>
      <description>&lt;p&gt;Python으로 Web 개발 공부를 해보는 중.. 아무런 정보도 맨토도 없이 무작정 Django책부터 하나 붙잡고 시작. 100% 끝낸건 아니지만 일단 기본적인 정보는 모두 캐냈다고 판단 후 책을 덮음.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://media.djangoproject.com/img/logos/django-logo-negative.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;145&#34; src=&#34;http://media.djangoproject.com/img/logos/django-logo-negative.png&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;이제부터 현실적인 문제에 봉착. Django가 짱!인줄 알았는데.. 파이썬에는 수많은 좋은 웹프레임웍들이 존재한다는 것!&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://bottlepy.org/docs/dev/&#34;&gt;Bottle&lt;/a&gt;로 짠 Simple한 &lt;a href=&#34;http://fi.am/entry/building-a-website-api-with-django-part-1-api-func/&#34;&gt;REST API예제&lt;/a&gt;를 보고 1차 감탄!&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://web2py.com/&#34;&gt;Web2Py&lt;/a&gt; 깔고서 관리자 페이지에서 IDE까지 제공해주는 Detail에 2차 감탄!&lt;br /&gt;&lt;br /&gt;마지막으로 &lt;a href=&#34;http://webpy.org/&#34;&gt;webpy&lt;/a&gt;까지 보고 나니 점점 헷갈린다!&lt;br /&gt;&lt;br /&gt;Django가 잘 만들어진 녀석이긴 하지만 일단 다른 프래임웍들을 알아보다 보니 Python위에서 만들어진 기술이란 느낌 보다는 그냥 Django다! 라는 생각이 들었다.&lt;br /&gt;&lt;br /&gt;Web2Py는 정말 제공해주는 것도 많고 편리하지만.. 어쩌면 개발자보다는 관리자 프랜들리한 느낌이 들어 좀 끄적여 보다가 패스!&lt;br /&gt;&lt;br /&gt;webpy는 뭔가 내가 원하는 대로 자유롭게 사용할 수 있으면서도 심플하고 편리함을 모두 가지고 있어 맘에 들었고 이제 이것으로 결정! 하는 순간 &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt;&amp;nbsp;라는 녀석이 눈에 들어왔다.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-beqQ0zkQbc8/TuBGb6cNDZI/AAAAAAAADmU/XAqcoH0bCxE/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.08.42.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;129&#34; src=&#34;http://4.bp.blogspot.com/-beqQ0zkQbc8/TuBGb6cNDZI/AAAAAAAADmU/XAqcoH0bCxE/s320/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA+2011-12-08+%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE+2.08.42.png&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;아직 자세히는 보지 못했지만..&lt;br /&gt;Bottle스러운 심플함과 Django스러운 template engine(동일한 엔진을 plugin으로 붙여쓰는 듯..)을 가지고 있을 뿐만 아니라 webpy스러운 자유로움을 모두 가지고 있는 것 같다.&lt;br /&gt;&lt;br /&gt;Flask라는 녀석이 마지막 방황이 되길 바라며..&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>